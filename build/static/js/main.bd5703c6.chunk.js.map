{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["myAlgoWallet","Pipeline","init","main","toggled","friendsTxid","friendsFetched","mynet","tealNames","tealContracts","chat","previousPosts","friends","refresh","a","i","length","name","fetch","data","text","program","data2","clearProgram","sleep","milliseconds","Promise","resolve","setTimeout","base64ToArrayBuffer","newData","Buffer","from","console","log","addTableRow","className","cell1","document","getElementById","insertRow","insertCell","innerHTML","fetchNote","txid","url2","json","data3","transaction","note","App","props","fetchBalance","addr","balance","then","setState","setNet","event","target","value","net","handleConnect","connect","myAddress","setInterval","state","switchConnector","pipeConnector","deploy","deployTeal","appAddress","algosdk","getApplicationAddress","delete","deleteApp","txID","optIn","appId","parseInt","args","push","changePic","pictx","alert","appCall","changeName","fund","famt","appCallWithTxn","deposit","depositAmt","modifyTeal","newGoal","searchTerms","replacements","replaceAll","goal","check","friendsAndMe","readGlobal","post","myMessage","startRefresh","readGlobalState","details","creator","message","picData","keyIndex","thisKey","window","atob","key","myPicTxid","bytes","myName","getFriends","handleFetch","canvas","url","toDataURL","myId","messageClass","mlength","dataJson","parsed","split","newArray","forEach","item","drawData","ctx","getContext","clearRect","width","height","counter","addAlpha","pixel","r","g","b","rgbFrom8","pic","Uint8ClampedArray","imgData","ImageData","renderer","createElement","putImageData","drawImage","addFriend","friendId","appid","includes","undefined","friendsDetails","friendName","list","friendsMod","toString","replace","send","address","txid2","options","innerText","level","fundAmount","share","depositAmount","myProfits","withdrawn","contribution","messages","getContracts","loadingSpin","this","loading","align","href","onClick","onChange","src","logo","alt","role","placeholder","rows","spellCheck","type","id","style","display","comments","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bd5703c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Pipeline from '@pipeline-ui-2/pipeline'; //change to import Pipeline from 'Pipeline for realtime editing Pipeline index.js, and dependency to: \"Pipeline\": \"file:..\",\r\n\r\nimport algosdk from 'algosdk'\r\nimport logo from \"./logo.svg\";\r\nimport \"./bootstrap.css\";\r\nimport \"./App.css\";\r\n\r\n//add app id 69417489 to input on frontend for testing without deployment\r\n\r\nconst myAlgoWallet = Pipeline.init();\r\n\r\nPipeline.main = false;\r\n\r\nvar toggled = true\r\n\r\nvar friendsTxid = \"\"\r\n\r\nvar canvasId = 2\r\n\r\nvar friendsFetched = false\r\n\r\nvar mynet = (Pipeline.main) ? \"MainNet\" : \"TestNet\";\r\n\r\nconst tealNames = [\"chat\"]\r\n\r\nconst tealContracts = {\r\n  chat: {},\r\n}\r\n\r\nconst previousPosts = {}\r\n\r\nvar friends = []\r\n\r\nvar refresh = false\r\n\r\nasync function getContracts() {\r\n  for (let i = 0; i < tealNames.length; i++) {\r\n    let name = tealNames[i]\r\n    let data = await fetch(\"teal/\" + name + \".txt\")\r\n    tealContracts[name].program = await data.text()\r\n    let data2 = await fetch(\"teal/\" + name + \" clear.txt\")\r\n    tealContracts[name].clearProgram = await data2.text()\r\n  }\r\n}\r\n\r\nfunction sleep(milliseconds) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\nfunction base64ToArrayBuffer(data) {\r\n  let newData = Buffer.from(data, 'base64');\r\n  console.log(newData);\r\n  return newData;\r\n}\r\n\r\nfunction addAlpha(data) {\r\n  let newData = [];\r\n  let counter = -1\r\n  for (var i = 0; i < data.length; i++) {\r\n    if (counter < 2) { newData.push(data[i]); counter++; }\r\n    else { newData.push(255); newData.push(data[i]); counter = 0; }\r\n  }\r\n  newData.push(255);\r\n  return newData;\r\n\r\n}\r\n\r\nfunction addTableRow(data, className) {\r\n  let table = document.getElementById(\"chatLog\");\r\n  let row = table.insertRow(0);\r\n  let cell1 = row.insertCell(0);\r\n  cell1.innerHTML = data;\r\n  cell1.className = className\r\n}\r\n\r\nfunction rgbFrom8(data) {\r\n  let newData = [];\r\n  for (var i = 0; i < data.length; i++) {\r\n    let pixel = data[i];\r\n    let r = (pixel >> 5) * 32;\r\n    let g = ((pixel & 28) >> 2) * 32;\r\n    let b = (pixel & 3) * 64;\r\n    newData.push(r);\r\n    newData.push(g);\r\n    newData.push(b);\r\n  }\r\n  return newData;\r\n}\r\n\r\nasync function fetchNote(txid) {\r\n\r\n  let indexerURL = 'https://algoindexer.algoexplorerapi.io/v2/transactions/'\r\n\r\n  /* if (Pipeline.main == true) {\r\n    indexerURL = indexerURL + 'algoindexer.algoexplorerapi.io/v2/transactions/'\r\n  }\r\n  else {\r\n    indexerURL = indexerURL + \"algoindexer.testnet.algoexplorerapi.io/v2/transactions/\"\r\n  } */\r\n\r\n  let url2 = indexerURL + txid\r\n  try {\r\n    let data = await fetch(url2)\r\n    let data2 = await data.json()\r\n    let data3 = data2.transaction.note\r\n    return data3\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      net: mynet,\r\n      txID: \"\",\r\n      myAddress: \"\",\r\n      balance: 0,\r\n      appAddress: \"\",\r\n      goal: 0,\r\n      level: 0,\r\n      fundAmount: \"Not fetched yet...\",\r\n      share: 0,\r\n      depositAmount: 0,\r\n      myProfits: 0,\r\n      withdrawn: 0,\r\n      contribution: 0,\r\n      data: \"\",\r\n      messages: [],\r\n      list: [],\r\n      toggled: \"block\",\r\n      mlength:0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    getContracts()\r\n  }\r\n\r\n  fetchBalance = (addr) => {\r\n    Pipeline.balance(addr).then(\r\n      data => {\r\n        this.setState({ balance: data });\r\n      }\r\n    );\r\n  }\r\n\r\n  setNet = (event) => {\r\n    if (event.target.value === \"TestNet\") {\r\n      Pipeline.main = false\r\n      this.setState({ net: \"TestNet\" })\r\n    }\r\n    else {\r\n      Pipeline.main = true\r\n      this.setState({ net: \"MainNet\" })\r\n    }\r\n\r\n  }\r\n\r\n  handleConnect = () => {\r\n    Pipeline.connect(myAlgoWallet).then(\r\n      data => {\r\n        this.setState({ myAddress: data });\r\n        setInterval(() => this.fetchBalance(this.state.myAddress), 5000)\r\n      }\r\n    );\r\n  }\r\n\r\n  switchConnector = (event) => {\r\n    Pipeline.pipeConnector = event.target.value\r\n    console.log(Pipeline.pipeConnector)\r\n  }\r\n\r\n  deploy = async () => {\r\n\r\n    let name = \"chat\"\r\n\r\n    Pipeline.deployTeal(tealContracts[name].program, tealContracts[name].clearProgram, [0, 5, 0, 0], [\"create\"]).then(data => {\r\n      document.getElementById(\"appid\").value = data;\r\n      this.setState({ appAddress: algosdk.getApplicationAddress(data) });\r\n    })\r\n  }\r\n\r\n  delete = async () => {\r\n    Pipeline.deleteApp(document.getElementById(\"appid\").value).then(data => {\r\n      this.setState({ txID: data })\r\n    })\r\n  }\r\n\r\n  optIn = async () => {\r\n    let appId = document.getElementById(\"appid\").value\r\n    this.state.appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n    let args = []\r\n    args.push(\"register\")\r\n    Pipeline.optIn(appId, args).then(data => {\r\n      this.setState({ txID: data });\r\n\r\n    })\r\n  }\r\n\r\n  changePic = async () => {\r\n\r\n    let appId = document.getElementById(\"appid\").value\r\n\r\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n    let pictx = document.getElementById(\"picAddress\").value\r\n    alert(pictx)\r\n    console.log(pictx)\r\n\r\n    Pipeline.appCall(appId, [\"pic\", pictx]).then(data => { this.setState({ txID: data }) })\r\n  }\r\n\r\n  changeName = async () => {\r\n\r\n    let appId = document.getElementById(\"appid\").value\r\n\r\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n    let name = document.getElementById(\"userName\").value\r\n    console.log(name)\r\n\r\n    Pipeline.appCall(appId, [\"name\", name]).then(data => { this.setState({ txID: data }) })\r\n  }\r\n\r\n  fund = async () => {\r\n    let appId = document.getElementById(\"appid\").value\r\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n    let famt = parseInt(document.getElementById(\"fundAmt\").value)\r\n    Pipeline.appCallWithTxn(appId, [\"fund\"], appAddress, famt, \"funding\", 0, [appAddress]).then(\r\n      data => { this.setState({ txID: data }) })\r\n  }\r\n\r\n  deposit = async () => {\r\n    let appId = document.getElementById(\"appid\").value\r\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n    let depositAmt = parseInt(document.getElementById(\"depAmt\").value)\r\n    Pipeline.appCallWithTxn(appId, [\"deposit\"], appAddress, depositAmt, \"depositing\", 0, [appAddress]).then(\r\n      data => { this.setState({ txID: data }) })\r\n  }\r\n\r\n  modifyTeal = () => {\r\n    let newGoal = document.getElementById(\"newGoal\").value\r\n    let search1 = \"BKGZZRBHXOBCD5HMITYZ5CI3V3LS6OMLUT2I7C7QIRU6VA3B2BXUFRN2BE\";\r\n    let search2 = \"3000000\"\r\n    let searchTerms = [search1, search2]\r\n    let replacements = [document.getElementById(\"recipient\").value, newGoal]\r\n\r\n    for (let i = 0; i < replacements.length; i++) {\r\n      tealContracts[\"daoDeposit\"].program = tealContracts[\"daoDeposit\"].program.replaceAll(searchTerms[i], replacements[i])\r\n      console.log(tealContracts[\"daoDeposit\"].program)\r\n    }\r\n    this.setState({ goal: newGoal })\r\n    alert(\"Contract modified! Check console log to preview\")\r\n  }\r\n\r\n  check = () => {\r\n\r\n    let appId = document.getElementById(\"appid\").value\r\n\r\n    let friendsAndMe = [...friends, appId]\r\n\r\n    for (let i = 0; i < friendsAndMe.length; i++) {\r\n      this.readGlobal(friendsAndMe[i])\r\n      sleep(1000)\r\n    }\r\n  }\r\n\r\n  post = async () => {\r\n\r\n    let appId = document.getElementById(\"appid\").value\r\n    if (appId === \"\") { alert(\"you forgot to tell us what your app Id is!\") }\r\n\r\n    else {\r\n      let appAddress = algosdk.getApplicationAddress(parseInt(appId))\r\n      let myMessage = document.getElementById(\"postMessage\").value\r\n\r\n      Pipeline.appCall(appId, [\"chat\", myMessage]).then(data => {\r\n        this.setState({ txID: data })\r\n        this.startRefresh()\r\n      })\r\n    }\r\n  }\r\n\r\n  readGlobal = async (appId) => {\r\n    try {\r\n      let data = await Pipeline.readGlobalState(appId)\r\n\r\n      let details = {\r\n        creator: \"\",\r\n        name: \"\",\r\n        message: \"\",\r\n        picData: \"\"\r\n      }\r\n\r\n      console.log(\"App Data\")\r\n      console.log(data)\r\n      let keyIndex = \"\"\r\n      for (let i = 0; i < data.length; i++) {\r\n        let thisKey = window.atob(data[i].key)\r\n        console.log(thisKey)\r\n\r\n        switch (thisKey) {\r\n          case \"pic\":\r\n            keyIndex = i;\r\n            let myPicTxid = data[keyIndex].value.bytes\r\n            details.picData = window.atob(myPicTxid)\r\n            break;\r\n          case \"chat\":\r\n            keyIndex = i;\r\n            let myMessage = window.atob(data[keyIndex].value.bytes)\r\n            details.message = myMessage\r\n            console.log(myMessage)\r\n            break;\r\n          case \"name\":\r\n            keyIndex = i;\r\n            let myName = window.atob(data[keyIndex].value.bytes)\r\n            details.name = myName\r\n            console.log(myName)\r\n            break;\r\n          case \"Creator\":\r\n            keyIndex = i;\r\n            let creator = data[keyIndex].value.bytes\r\n            details.creator = creator\r\n            break;\r\n          case \"friends\":\r\n            keyIndex = i;\r\n            friendsTxid = window.atob(data[keyIndex].value.bytes)\r\n            console.log(\"FriendsTxid:\")\r\n            console.log(friendsTxid)\r\n            if(!friendsFetched){\r\n              this.getFriends()\r\n              friendsFetched = false\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (previousPosts[appId] !== details.message) {\r\n\r\n        if (details.picData !== \"\") {\r\n          await this.handleFetch(details.picData)\r\n        }\r\n        canvasId++\r\n        let canvas = document.getElementById(\"canvas2\")\r\n        let url = canvas.toDataURL(\"image/png\");\r\n\r\n        if (details.picData === \"\") { url = \"anon.png\" }\r\n\r\n        let myId = document.getElementById(\"appid\").value\r\n\r\n        let messageClass = \"others\"\r\n\r\n        if (myId === appId) { messageClass = \"me\" }\r\n\r\n        addTableRow('<div id=\"upperMessage\" class=\"upperMessage-' + messageClass + '\"><img width=\"30px\" class=\"avatar-' + messageClass + '\" src=\"' + url + '\"></img><span class=\"messageName\">' + details.name + \"_\" + appId + '</span></div><div class=\"messageText\">' + \" \" + details.message + \"</div>\", messageClass)\r\n\r\n        this.setState({mlength:this.state.mlength + 1})\r\n      }\r\n\r\n      previousPosts[appId] = details.message\r\n\r\n      console.log(details)\r\n\r\n      return details\r\n    }\r\n    catch (error) { console.log(error) }\r\n  }\r\n\r\n  startRefresh = () => {\r\n    this.check()\r\n    if (!refresh) { setInterval(() => this.check(), 5000) }\r\n    refresh = true\r\n  }\r\n\r\n  getFriends = async () => {\r\n\r\n    let url = \"\"\r\n    if (Pipeline.main) {\r\n      url = \"https://algoindexer.algoexplorerapi.io\"\r\n    }\r\n    else {\r\n      url = \"https://algoindexer.testnet.algoexplorerapi.io\"\r\n    }\r\n\r\n    let data = await fetch(url + \"/v2/transactions/\" + friendsTxid)\r\n    let dataJson = await data.json()\r\n    let parsed = window.atob(dataJson.transaction.note).split(\",\")\r\n    let newArray = []\r\n    parsed.forEach(item => {\r\n      newArray.push(parseInt(item))\r\n    })\r\n    console.log(newArray)\r\n    friends = newArray\r\n\r\n  }\r\n\r\n  handleFetch = async (txid) => {\r\n    let data = await fetchNote(txid)\r\n    this.setState({ data: base64ToArrayBuffer(data) }, () =>\r\n      this.drawData());\r\n  }\r\n\r\n  drawData = () => {\r\n    var canvas = document.getElementById('canvas2');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    const newData = addAlpha(rgbFrom8(this.state.data));\r\n    var pic = new Uint8ClampedArray(newData);\r\n    var imgData = new ImageData(pic, 30, 30);\r\n    var renderer = document.createElement('canvas');\r\n    renderer.getContext('2d').putImageData(imgData, 0, 0);\r\n    ctx.drawImage(renderer, 0, 0, 300, 150);\r\n  }\r\n\r\n  addFriend = async () => {\r\n    let friendId = document.getElementById(\"addFriend\").value\r\n    let appid = document.getElementById(\"appid\").value\r\n\r\n    if (!friends.includes(friendId) && !(appid === friendId)) {\r\n\r\n      let friendsDetails = await this.readGlobal(friendId)\r\n\r\n      if (friendsDetails !== undefined){\r\n      \r\n      console.log(friendsDetails)\r\n      friends.push(friendId)\r\n      let friendName = friendsDetails.name + \"_\" + friendId\r\n      this.setState({ list: [...this.state.list, friendName] })\r\n      let friendsMod = friends.toString().replace(/\\\"/g,\"\")\r\n      alert(friendsMod)\r\n      let txid = await Pipeline.send(Pipeline.address,0,friendsMod,undefined,undefined,0)\r\n      alert(txid)\r\n      let txid2 = await Pipeline.appCall(parseInt(appid),[\"friends\",txid])\r\n      this.setState({txID:txid2})\r\n      }\r\n      else{\r\n        alert(\"invalid app id\")\r\n      }\r\n    }\r\n    else {\r\n      alert(\"you are attempting to add yourself or add a friend more than once!\")\r\n    }\r\n  }\r\n\r\n  options = () => {\r\n    toggled = !toggled\r\n    if (toggled) {\r\n      this.setState({ toggled: \"block\" })\r\n      document.getElementById(\"toggler\").innerText = \"Hide\"\r\n    }\r\n    else {\r\n      this.setState({ toggled: \"none\" })\r\n      document.getElementById(\"toggler\").innerText = \"Show\"\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const loadingSpin = this.state.loading ? \"App-logo Spin\" : \"App-logo\";\r\n    return (\r\n      <div align=\"center\">\r\n        <nav className=\"py-2 bg-light border-bottom\">\r\n          <div className=\"container d-flex flex-wrap\">\r\n            <ul className=\"nav me-auto\">\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2 active\" aria-current=\"page\">Home</a></li>\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">Features</a></li>\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">Pricing</a></li>\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">FAQs</a></li>\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">About</a></li>\r\n            </ul>\r\n            <ul className=\"nav\">\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">Login</a></li>\r\n              <li className=\"nav-item\"><a href=\"#\" className=\"nav-link link-dark px-2\">Sign up</a></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <header className=\"py-3 mb-4 border-bottom\">\r\n          <div className=\"container d-flex flex-wrap justify-content-center\">\r\n            <a href=\"/\" className=\"d-flex align-items-center mb-3 mb-lg-0 me-lg-auto text-dark text-decoration-none\">\r\n              <p>{\"Connected Address: \" + this.state.myAddress}</p>\r\n            </a>\r\n            <form className=\"col-12 col-lg-auto mb-3 mb-lg-0\">\r\n\r\n              <p>{\"Balance: \" + this.state.balance}</p>\r\n            </form>\r\n          </div>\r\n\r\n          <select className=\"form-select\" onClick={this.setNet}>\r\n            <option>TestNet</option>\r\n            <option>MainNet</option>\r\n          </select>\r\n\r\n          <select className=\"form-select\" onChange={this.switchConnector}>\r\n            <option>myAlgoWallet</option>\r\n            <option>WalletConnect</option>\r\n            <option>AlgoSigner</option>\r\n          </select>\r\n\r\n          <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.handleConnect}>Click to Connect</button>\r\n        </header>\r\n        <h2 className=\"px-2 badge bg-warning\">{this.state.net}</h2>\r\n        <div className=\"App container bg-light shadow\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className={loadingSpin} alt=\"logo\" />\r\n            <h1 className=\"App-title\">\r\n              Algo Chat\r\n              <span className=\"px-2\" role=\"img\" aria-label=\"Chat\">\r\n                💬\r\n              </span>\r\n            </h1>\r\n            <p>\r\n              Brought to you by{\" \"}\r\n              <a className=\"text-light\" href=\"https://headline-inc.com\">\r\n                HEADLINE\r\n              </a>\r\n            </p>\r\n          </header>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-4  pt-3 border-right\">\r\n              <h6>Say something about Algorand</h6>\r\n              <div className=\"comment-form\" />\r\n              <div ><div className=\"form-group\"></div><div className=\"form-group\"><textarea className=\"form-control\" placeholder=\"🤬 Your Comment\" name=\"message\" rows=\"5\" spellCheck=\"false\" type=\"text\" id=\"postMessage\"></textarea></div><div className=\"alert alert-danger\" style={{ display: \"none\" }}>Something went wrong while submitting form.</div><div className=\"form-group\">\r\n                <button className=\"btn btn-primary form-group\" onClick={this.post}>Comment ➤</button></div></div>\r\n            </div>\r\n            <div className=\"col-8  pt-3 bg-white\">\r\n              <div className=\"comment-list\"\r\n                loading={this.state.loading}\r\n                comments={this.state.comments}\r\n              />\r\n              <div className=\"comment-list\"><h5 className=\"text-muted mb-4\"><span className=\"badge badge-success\">{this.state.mlength}</span> Comment</h5><div className=\"alert text-center alert-info\">Be the first to comment</div> <div><table width=\"100%\" className=\"media-body p-2 shadow-sm rounded bg-light border rounded\" id=\"chatLog\"></table></div></div></div><footer className=\"App-footer\"><button className=\"btn btn-bd-light\" onClick={this.startRefresh}>Refresh</button>\r\n              <canvas id=\"canvas2\" height=\"30px\" width=\"30px\" style={{ display: \"none\" }}></canvas>\r\n              <div>{\"Transaction ID: \" + this.state.txID}</div>\r\n            </footer></div>\r\n        </div>\r\n        <div className=\"App container \">\r\n          <div className=\"bd-example\">\r\n            <table className=\"table\" width=\"100%\">\r\n              <td>\r\n              </td>\r\n              <tbody>\r\n                <tr>\r\n                  <td width=\"50%\">\r\n                    <h1>ACTIONS</h1>\r\n                    <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.deploy}>Deploy Contract</button>\r\n                    <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.optIn}>Opt In</button>\r\n                    <input className=\"form-control ds-input\" placeholder=\"App Id\" id=\"appid\" type=\"number\"></input>\r\n                    <input id=\"userName\" className=\"form-control\" placeholder=\"😎 Your Name\" name=\"name\" type=\"text\" />\r\n                    <button onClick={this.changeName}>Change Name</button>\r\n                  </td>\r\n                  <td width=\"50%\">\r\n\r\n                    <br></br>\r\n\r\n                    <p>{\"Application Address: \" + this.state.appAddress}</p>\r\n                    <br></br><br></br>\r\n                    <button className=\"btn btn-danger\" onClick={this.delete}>Delete App</button>\r\n                    <h3>Change Profile Pic</h3>\r\n                    <input className=\"form-control ds-input\" type=\"text\" id=\"picAddress\" placeholder=\"txid of pic\"></input>\r\n                    <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.changePic}>Fuse</button>\r\n\r\n                    <input className=\"form-control ds-input\" type=\"text\" id=\"addFriend\" placeholder=\"friend's app id\"></input>\r\n                    <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.addFriend}>Add Friend</button>\r\n                    <h3>My Friends:</h3>\r\n                    <p>{this.state.list}</p>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/logo.34786464.svg\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}